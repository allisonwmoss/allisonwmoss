PROJECT REQUIREMENTS
Your app must:
Render in the browser
Include separate HTML / CSS / JavaScript files
Use Javascript for DOM manipulation
Be deployed online using Github Project pages.
Use semantic, valid markup for HTML and CSS (must pass validation without errors)
Show a good commit history with frequent commits (minimum of one commit per project day)

Technical Requirements:
 Project code is pushed to a public Git repository x
 Project is deployed on the internet (Github Pages, Netlify Drop, Surge.sh)
 Uses HTML, CSS, and JS for game solution
 Use Javascript vanilla API for DOM manipulation
 Uses Event listening to handle user interaction

 Creativity and Interface:
 Uses CSS to style DOM elements
 Uses CSS to structure DOM element layout on screen

 Code Quality:
 HTML, CSS, and JS are in seperate files x
 Names (variables, functions, HTML ids, HTML classes, etc.) follow a naming convention
 Consistent indentation

 Functionality:
 Render a game in the browser
 User can play single iteration of game
 User can win/tie when winning conditions are met
 User can lose when losing conditions are met

 Planning/Process/Submission:
 At least 30 git commits made throughout project week
 Has Readme file x
 Readme file has link to deployed app
 
**************************************************************************************************************************************************************************
SIMON
Simon is a test of memory. Have your program choose a sequence of different colors at random and then prompt your player repeat the sequence allowing them to go to advance to next round if the player is successful.
Bonus:
Add timer-based scoring
Track scores across games (even if the page is reloaded)
**************************************************************************************************************************************************************************
GOALS/MILESTONES

Thursday 8/19: Create new git repository for project x, choose project idea x, complete and submit project proposal x.

Friday 8/20: Create HTML, CSS, and JS files and connect. x
Write user stories and pseudocode the basic structure of the project. x
Complete the HTML file and begin working in the JS file, if time allows. x

Monday 8/23: Fix junimo sequence animation delay so that it is correct no matter how many junimos are in the sequence. x
Add an ultimate win condition. x
Fix junimo hover animation, which currently does not run when the player is selecting junimos for the echo sequence. x
Explore ways for players to indicate how hard they want the game to be at start. x
Fix reset button for new dynamic game mode. x
Slack Github repo link to Ben. x



Tuesday 8/24: 
Reorganize app.js code for readability. Test to ensure everything still works. 
Look into an animation to run upon ultimate win condition. 
Design and implement the game rules box. Maybe this could become visible upon hover over a game mode option, on that screen. 
Look into timeout for the player to repeat the sequence and visual representation of that timeout. 

Wednesday 8/25: Complete styling and testing. 

Thursday 8/26: Resolve any remaining issues. Deploy to GitHub Pages. Add link to deployed app in README file. Prepare and rehearse presentation.

***************************************************************************************************************************************************************************
